---
import Button from './Button.astro';
import CtaBg from './CtaBg.astro';

interface CtaButton {
  href: string;
  text: string;
}

interface Props {
  type: 'global' | 'post';
  title: string;
  buttons: CtaButton[];
  img?: string;
  variant?: 'primary' | 'secondary';
}

const { type, title, buttons, img, variant = 'primary' } = Astro.props;
const baseClasses = `
  relative    
  my-20 
  border-2         
  py-8 
  px-8   
  rounded-sm         
  lg:-mx-12`;
---

{
  type === 'global' && (
    <div
      class={`${baseClasses} md:px-14 text-center border-primary-blue bg-primary-blue`}
    >
      <CtaBg />
      <div class="relative">
        <h2 class="heading-2">{title}</h2>
        <p class="mb-8 leading-normal text-xl">
          <slot />
        </p>
        <div class="flex flex-col md:flex-row justify-center gap-5 items-center">
          {buttons.map((button, i) => (
            <Button
              href={button.href}
              text={button.text}
              variant="primary"
              isOutline={i % 2 === 0 ? true : false}
              classes={['block']}
            />
          ))}
        </div>
      </div>
    </div>
  )
}

{
  type === 'post' && (
    <div class={`
      ${baseClasses} 
      lg:px-12 
      ${variant === 'primary' && 'border-primary-blue bg-primary-blue'}
      ${variant === 'secondary' && 'border-brand-purple bg-brand-purple'}
    `}>
      <CtaBg bgClass={variant === 'secondary' ? 'bg-brand-purple' : 'bg-primary-blue' } />
      <div class="relative flex flex-col md:flex-row items-center gap-2 md:gap-6">
        <figure class="w-auto md:w-1/2">
          <img src={img} alt="Promotional content for current article" />
        </figure>
        <div class="w-auto md:w-1/2">
          <h2 class="heading-2 mt-0 md:mb-1 lg:mb-4">{title}</h2>
          <p class="mb-4 -mt-4 md:mb-5 md:mt-0 leading-normal text-xl">
            <slot />
          </p>
          <div class="flex flex-col md:flex-row justify-start gap-5 items-center">
            {buttons.map((button, i) => (
              <Button
                href={button.href}
                text={button.text}
                variant="primary"
                isOutline={i % 2 === 0 ? true : false}
                classes={['block w-full text-center md:w-auto md:text-left']}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}
